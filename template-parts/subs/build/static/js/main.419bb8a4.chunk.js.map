{"version":3,"sources":["components/NavBar.js","components/AdminHeader.js","components/SubscriberTable.js","utils/returnURL.js","components/AddSub.js","components/SubModal.js","components/AdminPanel.js","App.js","index.js"],"names":["NavBar","AdminHeader","props","most_recent","activeSubs","length","id","first_name","last_name","expiringSubs","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","count","value","onChange","e","target","undefined","placeholder","style","fontSize","border","SubscriberTable","columns","data","useTable","initialState","sortBy","desc","pageSize","useFilters","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","state","flatColumns","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","pageIndex","colSpan","textAlign","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","filter","row","i","getRowProps","cells","cell","getCellProps","className","onClick","disabled","type","defaultValue","Number","width","key","return_url","process","LIVE_TEST","window","location","hostname","formData","form","v","el","querySelector","obj","email","address_line1","address_line2","address_city","address_country","address_postcode","issue","final_issue","delivery","JSON","stringify","AddSubForm","handleSubmit","event","preventDefault","document","getElementById","fetch","method","body","Accept","then","res","json","message","setTimeout","reset","alert","console","log","onSubmit","this","htmlFor","required","pattern","name","defaultChecked","min","React","Component","EditModal","useState","sub_id","sub","address_one","address_two","city","country","postcode","subscribe_until","start_issue","formState","setFormState","handleChange","s","onInput","updateSub","text","t","openState","open","SubModal","date_start","next_renewal_date","gift","gifter_email","gifter_first_name","gifter_last_name","stripe_subscription_id","wp_user_id","fa","address_line","trim","format","Date","parseInt","rel","href","base_url","affectedRows","cancelSubscription","OutputModal","setSub","view","setView","newSubData","ns","Object","keys","forEach","k","AdminPanel","subscriber","setSubscriber","showDialog","setShowDialog","closeModal","seeMore","useCallback","dataset","SelectColumnFilter","filterValue","setFilter","preFilteredRows","options","useMemo","Set","add","values","sort","stopPropagation","option","Header","accessor","Cell","Filter","data-sub_id","subs","today","month_from_now","months","is_expiring","isBefore","parseISO","isAfter","is_active","sub_status","CoolTab","isSelected","children","textDecoration","aria-label","isOpen","onDismiss","aria-hidden","AddSub","fetcher","url","a","async","axios","get","response","error","App","useSWR","refreshInterval","ReactDOM"],"mappings":"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","file":"static/js/main.419bb8a4.chunk.js","sourcesContent":["// src/components/NavBar.js\n\nimport React from \"react\";\n\nconst NavBar = () => {\n  return (\n    <nav>\n      <h1>Stinging Fly Subscriber Admin</h1>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\n\nconst AdminHeader = props => {\n  // Find most recent subscriber.\n  let most_recent = props.activeSubs[props.activeSubs.length - 1];\n  return (\n    <section id=\"admin_panel_header\">\n      <span>There are {props.activeSubs.length} current subscribers. </span>\n      <span>\n        The latest subscriber is {most_recent.first_name}{\" \"}\n        {most_recent.last_name}.{\" \"}\n      </span>\n      <span>\n        There are {props.expiringSubs.length} subscriptions expiring in the next\n        30 days.\n      </span>\n    </section>\n  );\n};\n\nexport default AdminHeader;\n","import React from \"react\";\nimport {\n  useTable,\n  useFilters,\n  useGlobalFilter,\n  useSortBy,\n  usePagination\n} from \"react-table\";\n\n// Define a default UI for filtering\nfunction GlobalFilter({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter\n}) {\n  const count = preGlobalFilteredRows.length;\n\n  return (\n    <span>\n      Search:{\" \"}\n      <input\n        value={globalFilter || \"\"}\n        onChange={e => {\n          setGlobalFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n        }}\n        placeholder={`${count} records...`}\n        style={{\n          fontSize: \"14px\",\n          border: \"0\"\n        }}\n      />\n    </span>\n  );\n}\n\n// Table Component\nfunction SubscriberTable({ columns, data }) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    state,\n    flatColumns,\n    preGlobalFilteredRows,\n    setGlobalFilter,\n    page, // Instead of using 'rows', we'll use page,\n    // which has only the rows for the active page\n\n    // The rest of these things are super handy, too ;)\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: { pageIndex, pageSize }\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: {\n        sortBy: [{ id: \"date_start\", desc: true }],\n        pageSize: 10\n      }\n    },\n    useFilters,\n    useGlobalFilter,\n    useSortBy,\n    usePagination\n  );\n\n  return (\n    <>\n      <table {...getTableProps()}>\n        <thead>\n          <tr>\n            <th\n              colSpan={flatColumns.length}\n              style={{\n                textAlign: \"left\"\n              }}\n            >\n              <GlobalFilter\n                preGlobalFilteredRows={preGlobalFilteredRows}\n                globalFilter={state.globalFilter}\n                setGlobalFilter={setGlobalFilter}\n              />\n            </th>\n          </tr>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render(\"Header\")}\n                  <span>\n                    {column.isSorted ? (column.isSortedDesc ? \" ▼\" : \" ▲\") : \"\"}\n                  </span>\n                  {column.filter === \"includes\"\n                    ? column.render(\"Filter\")\n                    : null}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <div className=\"pagination\">\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n          {\"<<\"}\n        </button>{\" \"}\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n          {\"<\"}\n        </button>{\" \"}\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\n          {\">\"}\n        </button>{\" \"}\n        <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n          {\">>\"}\n        </button>{\" \"}\n        <span>\n          Page{\" \"}\n          <strong>\n            {pageIndex + 1} of {pageOptions.length}\n          </strong>{\" \"}\n        </span>\n        <span>\n          | Go to page:{\" \"}\n          <input\n            type=\"number\"\n            defaultValue={pageIndex + 1}\n            onChange={e => {\n              const page = e.target.value ? Number(e.target.value) - 1 : 0;\n              gotoPage(page);\n            }}\n            style={{ width: \"100px\" }}\n          />\n        </span>{\" \"}\n        <select\n          value={pageSize}\n          onChange={e => {\n            setPageSize(Number(e.target.value));\n          }}\n        >\n          {[10, 20, 30, 40, 50].map(pageSize => (\n            <option key={pageSize} value={pageSize}>\n              Show {pageSize}\n            </option>\n          ))}\n        </select>\n      </div>\n    </>\n  );\n}\n\nexport default SubscriberTable;\n","const return_url = () => {\n  if (\n    process.env.LIVE_TEST === \"true\" ||\n    window.location.hostname === \"stingingfly.org\"\n  ) {\n    return `https://enigmatic-basin-09064.herokuapp.com/api/subscribers`;\n  } else {\n    return `http://localhost:8001/api/subscribers`;\n  }\n};\n\nexport default return_url;\n","import React from \"react\";\nimport return_url from \"../utils/returnURL\";\n\nconst formData = form => {\n  let v = el => form.querySelector(el).value || null;\n  let obj = {\n    first_name: v(\"#first_name\"),\n    last_name: v(\"#last_name\"),\n    email: v(\"#email\"),\n    address_line1: v(\"#address_line1\"),\n    address_line2: v(\"#address_line2\"),\n    address_city: v(\"#address_city\"),\n    address_country: v(\"#address_country\"),\n    address_postcode: v(\"#address_postcode\"),\n    issue: v(\"#start_issue\"),\n    final_issue: v(\"#final_issue\"),\n    delivery: v('input[name=\"delivery\"]:checked')\n  };\n  return JSON.stringify(obj);\n};\n\nclass AddSubForm extends React.Component {\n  handleSubmit = event => {\n    event.preventDefault();\n    const form = document.getElementById(\"add-sub-form\");\n    fetch(return_url(), {\n      method: \"POST\",\n      body: formData(form),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(res => {\n        switch (res.message) {\n          case \"subscriber_added\":\n            setTimeout(() => {\n              form.reset();\n              alert(\"Subscriber Added\");\n            }, 250);\n            break;\n          case \"subscriber_updated\":\n            setTimeout(() => {\n              form.reset();\n              alert(\"Subscriber Updated\");\n            }, 250);\n            break;\n          case \"customer_exists\":\n            setTimeout(() => {\n              alert(\"Subscriber already exists\");\n            }, 250);\n            break;\n          default:\n            console.log(res);\n            setTimeout(() => {\n              alert(\"Failed to Add Subscriber – Try Again?\");\n            }, 250);\n            break;\n        }\n      });\n  };\n\n  render() {\n    return (\n      <form id=\"add-sub-form\" onSubmit={this.handleSubmit}>\n        <fieldset id=\"sub_contact\">\n          <legend>Name + Email</legend>\n          <div className=\"fieldset-inputs\">\n            <label htmlFor=\"first_name\" className=\"half-width\">\n              <span className=\"label-title\">First Name</span>\n              <input\n                id=\"first_name\"\n                type=\"text\"\n                required\n                placeholder=\" \"\n                pattern=\".*\\S.*\"\n                name=\"first_name\"\n              />\n              <span className=\"validation\">This field is required.</span>\n            </label>\n            <label htmlFor=\"last_name\" className=\"half-width\">\n              <span className=\"label-title\">Last Name</span>\n              <input\n                id=\"last_name\"\n                type=\"text\"\n                required\n                placeholder=\" \"\n                pattern=\".*\\S.*\"\n                name=\"last_name\"\n              />\n              <span className=\"validation\">This field is required.</span>\n            </label>\n            <label htmlFor=\"email\" className=\"full-width\">\n              <span className=\"label-title\">Email</span>\n              <input\n                id=\"email\"\n                type=\"email\"\n                required\n                placeholder=\" \"\n                pattern=\".*\\S.*\"\n                name=\"email\"\n              />\n              <span className=\"validation\">This field is invalid.</span>\n            </label>\n          </div>\n        </fieldset>\n        <fieldset>\n          <legend>Address</legend>\n          <div className=\"fieldset-inputs\">\n            <label htmlFor=\"address_line1\" className=\"full-width\">\n              Address Line 1\n              <input\n                id=\"address_line1\"\n                name=\"address_line1\"\n                type=\"text\"\n                required\n                placeholder=\"&nbsp;\"\n                pattern=\".*\\S.*\"\n              />\n              <span className=\"validation\">This field is required.</span>\n            </label>\n            <label htmlFor=\"address_line2\" className=\"full-width\">\n              Address Line 2\n              <input\n                id=\"address_line2\"\n                name=\"address_line2\"\n                type=\"text\"\n                required\n                placeholder=\"&nbsp;\"\n                pattern=\".*\\S.*\"\n              />\n              <span className=\"validation\">This field is required.</span>\n            </label>\n            <label htmlFor=\"address_city\" className=\"third-width\">\n              City\n              <input id=\"address_city\" name=\"address_city\" type=\"text\" />\n            </label>\n            <label htmlFor=\"address_country\" className=\"third-width\">\n              Country\n              <input id=\"address_country\" name=\"address_country\" type=\"text\" />\n            </label>\n            <label htmlFor=\"address_postcode\" className=\"third-width\">\n              Postcode\n              <input\n                id=\"address_postcode\"\n                name=\"address_postcode\"\n                type=\"text\"\n              />\n            </label>\n          </div>\n          <h3>Select your delivery region</h3>\n          <input\n            type=\"radio\"\n            name=\"delivery\"\n            id=\"irl\"\n            value=\"irl\"\n            defaultChecked\n          />\n          <label htmlFor=\"irl\">Ireland and Northern Ireland</label>\n          <input type=\"radio\" name=\"delivery\" id=\"row\" value=\"row\" />\n          <label htmlFor=\"row\">Rest of the World</label>\n        </fieldset>\n        <fieldset id=\"sub_start\">\n          <legend>Issue</legend>\n          <input\n            type=\"number\"\n            id=\"start_issue\"\n            name=\"start_issue\"\n            min=\"41\"\n          ></input>\n          <label htmlFor=\"start_issue\">Starting Issue</label>\n          <input\n            type=\"number\"\n            id=\"final_issue\"\n            name=\"final_issue\"\n            min=\"42\"\n          ></input>\n          <label htmlFor=\"final_issue\">\n            Final Issue (Optional – Defaults to One Year)\n          </label>\n          <div className=\"fieldset-comment\"></div>\n        </fieldset>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n\nexport default AddSubForm;\n","import React from \"react\";\nimport { format } from \"date-fns\";\nimport return_url from \"../utils/returnURL\";\n\nconst cancelSubscription = sub_id => {\n  let base_url = return_url();\n  fetch(`${base_url}?sub_id=${sub_id}`, {\n    method: \"delete\"\n  })\n    .then(res => res.json())\n    .then(t => {\n      console.log(t);\n      if (t.affectedRows === 1) {\n        alert(\"Subscription Cancelled\");\n      }\n      return t;\n    });\n};\n\nconst EditModal = props => {\n  let [formState, setFormState] = React.useState({\n    sub_id: props.sub[0].sub_id,\n    first_name: props.sub[0].first_name,\n    last_name: props.sub[0].last_name,\n    email: props.sub[0].email,\n    address_one: props.sub[0].address_one,\n    address_two: props.sub[0].address_two,\n    city: props.sub[0].city,\n    country: props.sub[0].country,\n    postcode: props.sub[0].postcode,\n    subscribe_until: props.sub[0].subscribe_until,\n    start_issue: props.sub[0].start_issue\n  });\n\n  let save = () => {\n    console.log(formState);\n    props.updateSub(formState);\n    fetch(return_url(), {\n      method: \"PUT\",\n      body: JSON.stringify(formState),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => res.text())\n      .then(t => {\n        console.log(t);\n        props.openState({ open: \"sub\" });\n      });\n  };\n\n  let handleChange = e => {\n    let s = { ...formState };\n    s[e.target.name] = e.target.value;\n    setFormState(s);\n  };\n\n  return (\n    <div className=\"edit-modal\">\n      <form id=\"edit-form\">\n        <label htmlFor=\"first_name\">First Name</label>\n        <input\n          name=\"first_name\"\n          id=\"first_name\"\n          defaultValue={formState.first_name}\n          pattern=\".*\\S.*\"\n          onInput={handleChange}\n        />\n        <label htmlFor=\"last_name\">Last Name</label>\n        <input\n          name=\"last_name\"\n          id=\"last_name\"\n          defaultValue={formState.last_name}\n          pattern=\".*\\S.*\"\n          onInput={handleChange}\n        />\n        <label htmlFor=\"email\">Email</label>\n        <input\n          name=\"email\"\n          id=\"email\"\n          defaultValue={formState.email}\n          pattern=\".*\\S.*\"\n          onInput={handleChange}\n        />\n\n        <label htmlFor=\"address_one\">Address Line 1</label>\n        <input\n          name=\"address_one\"\n          id=\"address_one\"\n          defaultValue={formState.address_one}\n          pattern=\".*\\S.*\"\n          onInput={handleChange}\n        />\n\n        <label htmlFor=\"address_two\">Address Line 2</label>\n        <input\n          name=\"address_two\"\n          id=\"address_two\"\n          defaultValue={formState.address_two}\n          pattern=\".*\\S.*\"\n          onInput={handleChange}\n        />\n\n        <label htmlFor=\"city\">City</label>\n        <input\n          name=\"city\"\n          id=\"city\"\n          defaultValue={formState.city}\n          pattern=\".*\\S.*\"\n          onInput={handleChange}\n        />\n\n        <label htmlFor=\"country\">Country</label>\n        <input\n          name=\"country\"\n          id=\"country\"\n          defaultValue={formState.country}\n          pattern=\".*\\S.*\"\n          onInput={handleChange}\n        />\n\n        <label htmlFor=\"postcode\">Postcode</label>\n        <input\n          name=\"postcode\"\n          id=\"postcode\"\n          defaultValue={formState.postcode}\n          pattern=\".*\\S.*\"\n          onInput={handleChange}\n        />\n\n        <label htmlFor=\"start_issue\">Starting Issue</label>\n        <input\n          type=\"number\"\n          name=\"start_issue\"\n          id=\"start_issue\"\n          defaultValue={formState.start_issue}\n          onInput={handleChange}\n        />\n\n        <label htmlFor=\"final_issue\">Final Issue</label>\n        <input\n          type=\"number\"\n          name=\"subscribe_until\"\n          id=\"final_issue\"\n          defaultValue={formState.subscribe_until}\n          onInput={handleChange}\n        />\n      </form>\n      <button id=\"save-edits\" onClick={save}>\n        Save Edits\n      </button>\n    </div>\n  );\n};\n\nconst SubModal = props => {\n  let {\n    sub_id,\n    first_name,\n    last_name,\n    email,\n    address_one,\n    address_two,\n    city,\n    country,\n    postcode,\n    date_start,\n    next_renewal_date,\n    gift,\n    gifter_email,\n    gifter_first_name,\n    gifter_last_name,\n    stripe_subscription_id,\n    subscribe_until,\n    start_issue,\n    wp_user_id\n  } = props.sub[0];\n\n  const fa = address_line => {\n    if (address_line) {\n      return \", \" + address_line.trim();\n    } else {\n      return \" \";\n    }\n  };\n\n  return (\n    <div className=\"sub_in_modal\">\n      <h2 className=\"modal__name\">\n        {first_name} {last_name} {gift ? <span>(Gift)</span> : \"\"}\n      </h2>\n      <p className=\"modal__email\">{email}</p>\n      <p className=\"modal__address\">\n        <strong>Address:</strong> <span>{address_one.trim()}</span>\n        <span>{fa(address_two)}</span>\n        <span>\n          {fa(city)}\n          {fa(postcode)}\n        </span>\n        <span>{fa(country)}</span>\n      </p>\n      <hr></hr>\n      <p>\n        <strong>Subscribed:</strong>{\" \"}\n        {format(new Date(date_start), \"dd/MM/yyyy\")}\n      </p>\n      <p>\n        <strong>Renews: </strong>\n        {gift\n          ? \"No Renewal\"\n          : format(new Date(next_renewal_date), \"dd/MM/yyyy\")}\n      </p>\n      <p>\n        <strong>Started With: </strong>\n        {parseInt(start_issue)}\n      </p>\n      <p>\n        <strong>Last Issue: </strong>\n        {parseInt(subscribe_until)}\n      </p>\n      <hr></hr>\n      <p>\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href={`https://dashboard.stripe.com/subscriptions/${stripe_subscription_id}`}\n        >\n          View on Stripe\n        </a>\n      </p>\n      <p>\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href={`https://stingingfly.org/wp-admin/user-edit.php?user_id=${wp_user_id}`}\n        >\n          View on stingingfly.org\n        </a>\n        {gift ? (\n          <section className=\"gift\">\n            <hr></hr>\n            <p>\n              <strong>Gifted By: </strong>\n              {gifter_first_name} {gifter_last_name} ({gifter_email})\n            </p>\n          </section>\n        ) : (\n          \"\"\n        )}\n      </p>\n      <hr></hr>\n      <button onClick={() => props.openState({ open: \"edit\" })}>\n        Edit Subscription Details\n      </button>\n      <button onClick={() => cancelSubscription(sub_id)}>\n        Cancel Subscription\n      </button>\n    </div>\n  );\n};\n\nconst OutputModal = props => {\n  const [sub, setSub] = React.useState(props);\n  const [view, setView] = React.useState({ open: \"sub\" });\n\n  const updateSub = newSubData => {\n    let ns = { ...sub };\n    let obj = ns.sub[0];\n    [...Object.keys(newSubData)].forEach(k => {\n      if (obj[k]) {\n        obj[k] = newSubData[k];\n      }\n    });\n    setSub(ns);\n  };\n\n  if (view.open === \"sub\") {\n    return <SubModal openState={v => setView(v)} {...sub} />;\n  }\n  if (view.open === \"edit\") {\n    return (\n      <EditModal\n        openState={v => setView(v)}\n        updateSub={s => updateSub(s)}\n        {...sub}\n      />\n    );\n  }\n};\n\nexport default OutputModal;\n","import React from \"react\";\nimport { Tabs, TabList, Tab, TabPanels, TabPanel } from \"@reach/tabs\";\nimport { Dialog } from \"@reach/dialog\";\nimport VisuallyHidden from \"@reach/visually-hidden\";\nimport \"@reach/dialog/styles.css\";\nimport \"@reach/tabs/styles.css\";\nimport AdminHeader from \"./AdminHeader\";\nimport SubscriberTable from \"./SubscriberTable\";\nimport AddSubForm from \"./AddSub\";\nimport SubModal from \"./SubModal\";\nimport { add, isBefore, parseISO, isAfter, format } from \"date-fns\";\n\nconst AdminPanel = props => {\n  const [subscriber, setSubscriber] = React.useState({});\n  const [showDialog, setShowDialog] = React.useState(false);\n  const openModal = () => setShowDialog(true);\n  const closeModal = () => setShowDialog(false);\n\n  const seeMore = React.useCallback(\n    e => {\n      e.preventDefault();\n      let id = parseInt(e.target.dataset.sub_id);\n      let subscriber = props.data.filter(sub => sub.sub_id === id);\n      setSubscriber(subscriber);\n      openModal();\n    },\n    [props.data]\n  );\n\n  function SelectColumnFilter({\n    column: { filterValue, setFilter, preFilteredRows, id }\n  }) {\n    // Calculate the options for filtering\n    // using the preFilteredRows\n    const options = React.useMemo(() => {\n      const options = new Set();\n      preFilteredRows.forEach(row => {\n        options.add(row.values[id]);\n      });\n      return [...options.values()].sort();\n    }, [id, preFilteredRows]);\n\n    // Render a multi-select box\n    return (\n      <select\n        value={filterValue}\n        onChange={e => {\n          setFilter(e.target.value || undefined);\n        }}\n        onClick={e => e.stopPropagation()}\n      >\n        <option value=\"\">All</option>\n        {options.map((option, i) => (\n          <option key={i} value={option}>\n            {option}\n          </option>\n        ))}\n      </select>\n    );\n  }\n\n  // Define columns for the subscriber table.\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"First Name\",\n        accessor: \"first_name\"\n      },\n      {\n        Header: \"Last Name\",\n        accessor: \"last_name\"\n      },\n      {\n        Header: \"Email\",\n        accessor: \"email\"\n      },\n      {\n        Header: \"Subscribed\",\n        accessor: \"date_start\",\n        Cell: ({ cell: { value } }) => format(new Date(value), \"dd/MM/yyyy\")\n      },\n      {\n        Header: \"Final Issue\",\n        accessor: \"subscribe_until\",\n        Filter: SelectColumnFilter,\n        filter: \"includes\",\n        Cell: ({ cell: { value } }) => parseInt(value)\n      },\n      {\n        Header: \"Gift\",\n        accessor: \"gift\",\n        Cell: ({ cell: { value } }) => (value ? \"Gift\" : \"\")\n      },\n      {\n        id: \"Expand\",\n        accessor: \"sub_id\",\n        Cell: ({ cell: { value } }) => (\n          <button onClick={seeMore} data-sub_id={value}>\n            More\n          </button>\n        )\n      }\n    ],\n    [seeMore]\n  );\n\n  // Filter the subs\n  let subs = props.data;\n  let today = new Date();\n  let month_from_now = add(today, { months: 1 });\n\n  // List subs that are expiring in the next month.\n  let is_expiring = subs.filter(\n    sub =>\n      isBefore(parseISO(sub.next_renewal_date), month_from_now) &&\n      isAfter(parseISO(sub.next_renewal_date), today)\n  );\n\n  // List active subs\n  let is_active = subs.filter(sub => sub.sub_status === \"active\");\n\n  function CoolTab(props) {\n    const { isSelected, children } = props;\n    return (\n      <Tab\n        {...props}\n        style={{ textDecoration: isSelected ? \"underline\" : \"none\" }}\n      >\n        {children}\n      </Tab>\n    );\n  }\n\n  return (\n    <div id=\"admin_panel\">\n      <Dialog\n        aria-label=\"sub-dialog\"\n        isOpen={showDialog}\n        onDismiss={closeModal}\n      >\n        <button className=\"close-button\" onClick={closeModal}>\n          <VisuallyHidden>Close</VisuallyHidden>\n          <span aria-hidden>×</span>\n        </button>\n        <SubModal sub={subscriber} />\n      </Dialog>\n      <AdminHeader\n        activeSubs={is_active}\n        expiringSubs={is_expiring}\n      ></AdminHeader>\n      <Tabs>\n        <TabList>\n          <CoolTab>List Subscribers</CoolTab>\n          <CoolTab>Add New Subscriber</CoolTab>\n          <CoolTab>List Patrons</CoolTab>\n          <CoolTab>Add New Patron</CoolTab>\n        </TabList>\n        <TabPanels>\n          <TabPanel>\n            <SubscriberTable columns={columns} data={is_active} />\n          </TabPanel>\n          <TabPanel>\n            <AddSubForm />\n          </TabPanel>\n        </TabPanels>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default AdminPanel;\n","// src/App.js\n\nimport React from \"react\";\nimport NavBar from \"./components/NavBar\";\nimport AdminPanel from \"./components/AdminPanel\";\nimport useSWR from \"swr\";\nimport axios from \"axios\";\nimport return_url from \"./utils/returnURL\";\nimport \"./App.css\";\n\nconst fetcher = async url => {\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nfunction App() {\n  const { data, error } = useSWR(return_url(), fetcher, {\n    refreshInterval: 120000\n  });\n\n  if (error) return <div>failed to load</div>;\n  if (!data) return <div>loading...</div>;\n\n  return (\n    <div className=\"App\">\n      <header>\n        <NavBar />\n      </header>\n      <AdminPanel data={data} />\n    </div>\n  );\n}\n\nexport default App;\n","// src/index.js\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}